#
#  Copyright 2022 Red Hat
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#

grpc=The gRPC subsystem
grpc.add=Adds the gRPC subsystem
grpc.remove=Removes the gRPC subsystem
grpc.grpc-service=gRPC service
grpc.deployment.grpc-service=gRPC service
grpc.deployment.grpc-service.service-class=Service class

grpc.flow-control-window=gRPC flow control window parameter
grpc.handshake-timeout=gRPC handshake timeout parameter
grpc.initial-flow-control-window=gRPC initial flow control window parameter
grpc.keep-alive-time=gRPC keep alive time parameter
grpc.keep-alive-timeout=gRPC keep alive timeout parameter
grpc.key-manager-name =gRPC name of key manager parameter
grpc.max-concurrent-calls-per-connection=gRPC max concurrent calls per connection parameter
grpc.max-connection-age=gRPC max connection age parameter
grpc.max-connection-age-grace=gRPC max connection age grace parameter
grpc.max-connection-idle=gRPC max connection idle parameter
grpc.max-inbound-message-size=gRPC max inbound message size parameter
grpc.max-inbound-metadata-size=gRPC max inbound metadata size parameter
grpc.permit-keep-alive-time=gRPC permit keep alive time parameter
grpc.permit-keep-alive-without-calls=gRPC permit keep alive without calls parameter
grpc.protocol-provider=gRPC SSL/TLS protocol provider
grpc.session-cache-size=gRPC size of the cache used for storing SSL session objects
grpc.session-timeout=gRPC timeout for the cached SSL session objects
grpc.shutdown-timeout=gRPC server shutdown timeout parameter
grpc.socket-binding=The socket binding for the gRPC server to use
grpc.ssl-context-name=gRP name of SSLContext
grpc.start-tls=gRPC whether first write request shouldn't be encrypted
grpc.trust-manager-name =gRPC name of trust manager parameter

